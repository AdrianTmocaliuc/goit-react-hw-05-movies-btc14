{"version":3,"file":"static/js/379.95914d78.chunk.js","mappings":"yOAIAA,IAAAA,SAAAA,QAAyB,+BAAzB,IAEqBC,EAAAA,WAGnB,cAAe,oBAFfC,QAAU,mCAGRC,KAAKC,YAAc,G,OACpB,2EAED,6GAE2BJ,GAAAA,CAAM,6BAAD,OAA8BG,KAAKD,UAFnE,cAEUG,EAFV,yBAGWA,GAHX,gCAKIC,MAAM,wBALV,2GAFC,IAED,+DAQA,WAAqBC,GAArB,gGAE2BP,GAAAA,CAAM,yBAAD,OACDG,KAAKD,QADJ,kBACqBK,EADrB,+CAFhC,cAEUF,EAFV,yBAKWA,GALX,gCAOIC,MAAM,wBAPV,4GARA,IAQA,gEAWA,WAAsBE,GAAtB,gGAE2BR,GAAAA,CAAM,UAAD,OAChBQ,EADgB,oBACFL,KAAKD,QADH,kBACoBC,KAAKC,YADzB,2CAFhC,cAEUC,EAFV,yBAKWA,GALX,gCAOIC,MAAM,sBAPV,4GAXA,IAWA,gEAUA,WAAsBE,GAAtB,gGAE2BR,GAAAA,CAAM,UAAD,OAChBQ,EADgB,4BACML,KAAKD,QADX,oBAFhC,cAEUG,EAFV,yBAKWA,GALX,gCAOIC,MAAM,wBAPV,4GAVA,IAUA,gEAWA,WAAsBE,GAAtB,gGAE2BR,GAAAA,CAAM,UAAD,OAChBQ,EADgB,4BACML,KAAKD,QADX,oBAFhC,cAEUG,EAFV,yBAKWA,GALX,gCAOIC,MAAM,wBAPV,4GAXA,M,EApCmBL,I,oDCoBrB,IAtBA,YAAmC,IAAdQ,EAAa,EAAbA,UACnB,OACE,8BACGA,EAAUC,KAAI,SAACC,GAEd,OACE,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMH,IAC3BM,MAAO,CAAEC,QAASJ,EAAMH,GAAIG,MAAOA,IAHvC,SAMGA,EAAMK,MAAQL,EAAMM,kBAPhBN,EAAMH,W,uHCTzB,EAAwB,yB,SCmCxB,MAhCA,YAAkC,IAAbU,EAAY,EAAZA,SACnB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMC,OAAO,GAAGN,SAZC,SAACO,GAEpB,GADAA,EAAEC,kBACGN,EAAUO,OACb,OAAOrB,MAAM,oBAGfY,EAASE,GACTC,EAAa,KAKX,WACE,kBACEO,KAAK,OACLC,YAAY,aACZC,MAAOV,EACPW,SArBc,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACjCT,EAAaS,OAsBT,mBAAQF,KAAK,SAAb,0B,UCvBFK,EAAY,I,QAAIhC,GAgCtB,MA9BA,WACE,OAA4BkB,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACA,GAAkChB,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMe,GAAYC,EAAAA,EAAAA,cAAW,iBAAC,uFACvBjB,EADuB,iEAIHa,EAAUK,eAAelB,GAJtB,OAItBmB,EAJsB,OAK5BJ,EAAUI,EAAWC,KAAKC,SALE,2CAM3B,CAACrB,IAUJ,OARAsB,EAAAA,EAAAA,YAAU,WACRN,MACC,CAACA,KAOF,4BACE,SAAC,EAAD,CAAWlB,SANM,SAACyB,GACpBtB,EAAasB,OAMX,yBACE,SAACC,EAAA,EAAD,CAAWnC,UAAWyB","sources":["Services/ApiService.js","components/MovieList/MovieList.jsx","webpack://start-react-template/./src/components/FormInput/FormInput.module.scss?90a9","components/FormInput/FormInput.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\n//api.themoviedb.org/3/movie/550?api_key=f7d6a30af5958d06330f7e1173f523fb\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nexport default class MoviesApi {\r\n  API_KEY = \"f7d6a30af5958d06330f7e1173f523fb\";\r\n\r\n  constructor() {\r\n    this.searchQuery = \"\";\r\n  }\r\n\r\n  async getTrendingMovie() {\r\n    try {\r\n      const response = await axios(`/trending/all/day?api_key=${this.API_KEY}`);\r\n      return response;\r\n    } catch (error) {\r\n      alert(\"Something went wrong\");\r\n    }\r\n  }\r\n  async getSearchMovie(text) {\r\n    try {\r\n      const response = await axios(\r\n        `/search/movie?api_key=${this.API_KEY}&query=${text}&language=en-US&page=1&include_adult=false`\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      alert(\"Something went wrong\");\r\n    }\r\n  }\r\n\r\n  async getMovieDetails(id) {\r\n    try {\r\n      const response = await axios(\r\n        `/movie/${id}?api_key=${this.API_KEY}&query=${this.searchQuery}&language=en-US&page=1&&language=en-US`\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      alert(\"Less information !\");\r\n    }\r\n  }\r\n  async getMovieCredits(id) {\r\n    try {\r\n      const response = await axios(\r\n        `/movie/${id}/credits?api_key=${this.API_KEY}&language=en-US`\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      alert(\"Something went wrong\");\r\n    }\r\n  }\r\n\r\n  async getMovieReviews(id) {\r\n    try {\r\n      const response = await axios(\r\n        `/movie/${id}/reviews?api_key=${this.API_KEY}&language=en-US`\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      alert(\"Something went wrong\");\r\n    }\r\n  }\r\n\r\n  // get query() {\r\n  //   return this.searchQuery;\r\n  // }\r\n\r\n  // set query(newSearch) {\r\n  //   this.searchQuery = newSearch;\r\n  // }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction MovieList({ listItems }) {\r\n  return (\r\n    <>\r\n      {listItems.map((movie) => {\r\n        // console.log(\"movie\", movie);\r\n        return (\r\n          <li key={movie.id}>\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${movie.id}`,\r\n                state: { movieId: movie.id, movie: movie },\r\n              }}\r\n            >\r\n              {movie.name || movie.original_title}\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n\r\nMovieList.propTypes = {\r\n  listItems: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string,\r\n      original_title: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"FormInput_input__4JDVt\"};","import React, { useState } from \"react\";\r\nimport s from \"./FormInput.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction FormInput({ onSubmit }) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const onChangeInput = ({ target: { value } }) => {\r\n    setInputText(value);\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    if (!inputText.trim()) {\r\n      return alert(\"Enter movie name\");\r\n    }\r\n    // console.log(\"inputText\", inputText);\r\n    onSubmit(inputText);\r\n    setInputText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={s.input}>\r\n      <form action=\"\" onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter name\"\r\n          value={inputText}\r\n          onChange={onChangeInput}\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormInput;\r\n\r\nFormInput.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  inputText: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport FormInput from \"components/FormInput/FormInput\";\r\nimport MovieList from \"components/MovieList/MovieList\";\r\nimport MoviesApi from \"Services/ApiService\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst moviesApi = new MoviesApi();\r\n\r\nfunction MoviesPage() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const axiosData = useCallback(async () => {\r\n    if (!inputText) {\r\n      return;\r\n    }\r\n    const showMovies = await moviesApi.getSearchMovie(inputText);\r\n    setMovies(showMovies.data.results);\r\n  }, [inputText]);\r\n\r\n  useEffect(() => {\r\n    axiosData();\r\n  }, [axiosData]);\r\n\r\n  const onSubmitForm = (Text) => {\r\n    setInputText(Text);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormInput onSubmit={onSubmitForm} />\r\n      <ul>\r\n        <MovieList listItems={movies} />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesPage;\r\n\r\nMoviesPage.propTypes = {\r\n  movies: PropTypes.array,\r\n  inputText: PropTypes.string,\r\n};\r\n"],"names":["axios","MoviesApi","API_KEY","this","searchQuery","response","alert","text","id","listItems","map","movie","to","pathname","state","movieId","name","original_title","onSubmit","useState","inputText","setInputText","className","s","action","e","preventDefault","trim","type","placeholder","value","onChange","target","moviesApi","movies","setMovies","axiosData","useCallback","getSearchMovie","showMovies","data","results","useEffect","Text","MovieList"],"sourceRoot":""}