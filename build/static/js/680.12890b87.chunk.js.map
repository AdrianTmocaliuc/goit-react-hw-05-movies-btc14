{"version":3,"file":"static/js/680.12890b87.chunk.js","mappings":"yOAIAA,IAAAA,SAAAA,QAAyB,+BAAzB,IAEqBC,EAAAA,WAGnB,cAAe,oBAFfC,QAAU,mCAGRC,KAAKC,YAAc,G,OACpB,2EAED,6GAE2BJ,GAAAA,CAAM,6BAAD,OAA8BG,KAAKD,UAFnE,cAEUG,EAFV,yBAGWA,GAHX,gCAKIC,MAAM,wBALV,2GAFC,IAED,+DAQA,WAAqBC,GAArB,gGAE2BP,GAAAA,CAAM,yBAAD,OACDG,KAAKD,QADJ,kBACqBK,EADrB,+CAFhC,cAEUF,EAFV,yBAKWA,GALX,gCAOIC,MAAM,wBAPV,4GARA,IAQA,gEAWA,WAAsBE,GAAtB,gGAE2BR,GAAAA,CAAM,UAAD,OAChBQ,EADgB,oBACFL,KAAKD,QADH,kBACoBC,KAAKC,YADzB,2CAFhC,cAEUC,EAFV,yBAKWA,GALX,gCAOIC,MAAM,sBAPV,4GAXA,IAWA,gEAUA,WAAsBE,GAAtB,gGAE2BR,GAAAA,CAAM,UAAD,OAChBQ,EADgB,4BACML,KAAKD,QADX,oBAFhC,cAEUG,EAFV,yBAKWA,GALX,gCAOIC,MAAM,wBAPV,4GAVA,IAUA,gEAWA,WAAsBE,GAAtB,gGAE2BR,GAAAA,CAAM,UAAD,OAChBQ,EADgB,4BACML,KAAKD,QADX,oBAFhC,cAEUG,EAFV,yBAKWA,GALX,gCAOIC,MAAM,wBAPV,4GAXA,M,EApCmBL,I,oDCoBrB,IAtBA,YAAmC,IAAdQ,EAAa,EAAbA,UACnB,OACE,8BACGA,EAAUC,KAAI,SAACC,GAEd,OACE,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMH,IAC3BM,MAAO,CAAEC,QAASJ,EAAMH,GAAIG,MAAOA,IAHvC,SAMGA,EAAMK,MAAQL,EAAMM,kBAPhBN,EAAMH,W,6GCLnBU,EAAY,IAAIjB,EAAAA,EAqBtB,UAnBA,WACE,OAA4BkB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAYC,EAAAA,EAAAA,cAAW,iBAAC,oGACHL,EAAUM,mBADP,OACtBC,EADsB,OAE5BJ,EAAUI,EAAWC,KAAKC,SAFE,2CAG3B,IAMH,OAJAC,EAAAA,EAAAA,YAAU,WACRN,MACC,CAACA,KAGF,0BACE,wBAAKF,IAAU,SAAC,IAAD,CAAWX,UAAWW","sources":["Services/ApiService.js","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\n//api.themoviedb.org/3/movie/550?api_key=f7d6a30af5958d06330f7e1173f523fb\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nexport default class MoviesApi {\r\n  API_KEY = \"f7d6a30af5958d06330f7e1173f523fb\";\r\n\r\n  constructor() {\r\n    this.searchQuery = \"\";\r\n  }\r\n\r\n  async getTrendingMovie() {\r\n    try {\r\n      const response = await axios(`/trending/all/day?api_key=${this.API_KEY}`);\r\n      return response;\r\n    } catch (error) {\r\n      alert(\"Something went wrong\");\r\n    }\r\n  }\r\n  async getSearchMovie(text) {\r\n    try {\r\n      const response = await axios(\r\n        `/search/movie?api_key=${this.API_KEY}&query=${text}&language=en-US&page=1&include_adult=false`\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      alert(\"Something went wrong\");\r\n    }\r\n  }\r\n\r\n  async getMovieDetails(id) {\r\n    try {\r\n      const response = await axios(\r\n        `/movie/${id}?api_key=${this.API_KEY}&query=${this.searchQuery}&language=en-US&page=1&&language=en-US`\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      alert(\"Less information !\");\r\n    }\r\n  }\r\n  async getMovieCredits(id) {\r\n    try {\r\n      const response = await axios(\r\n        `/movie/${id}/credits?api_key=${this.API_KEY}&language=en-US`\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      alert(\"Something went wrong\");\r\n    }\r\n  }\r\n\r\n  async getMovieReviews(id) {\r\n    try {\r\n      const response = await axios(\r\n        `/movie/${id}/reviews?api_key=${this.API_KEY}&language=en-US`\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      alert(\"Something went wrong\");\r\n    }\r\n  }\r\n\r\n  // get query() {\r\n  //   return this.searchQuery;\r\n  // }\r\n\r\n  // set query(newSearch) {\r\n  //   this.searchQuery = newSearch;\r\n  // }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction MovieList({ listItems }) {\r\n  return (\r\n    <>\r\n      {listItems.map((movie) => {\r\n        // console.log(\"movie\", movie);\r\n        return (\r\n          <li key={movie.id}>\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${movie.id}`,\r\n                state: { movieId: movie.id, movie: movie },\r\n              }}\r\n            >\r\n              {movie.name || movie.original_title}\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n\r\nMovieList.propTypes = {\r\n  listItems: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string,\r\n      original_title: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n","import MoviesApi from \"Services/ApiService\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport MovieList from \"components/MovieList/MovieList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst moviesApi = new MoviesApi();\r\n\r\nfunction HomePage() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const axiosData = useCallback(async () => {\r\n    const showMovies = await moviesApi.getTrendingMovie();\r\n    setMovies(showMovies.data.results);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axiosData();\r\n  }, [axiosData]);\r\n\r\n  return (\r\n    <div>\r\n      <ul>{movies && <MovieList listItems={movies} />}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\nHomePage.propTypes = {\r\n  movies: PropTypes.array,\r\n};\r\n"],"names":["axios","MoviesApi","API_KEY","this","searchQuery","response","alert","text","id","listItems","map","movie","to","pathname","state","movieId","name","original_title","moviesApi","useState","movies","setMovies","axiosData","useCallback","getTrendingMovie","showMovies","data","results","useEffect"],"sourceRoot":""}