{"version":3,"file":"static/js/379.fead0c5e.chunk.js","mappings":"yOAIAA,IAAAA,SAAAA,QAAyB,+BAAzB,IAEqBC,EAAAA,WAGnB,cAAe,oBAFfC,QAAU,mCAGRC,KAAKC,YAAc,G,OACpB,2EAED,6GAE2BJ,GAAAA,CAAM,6BAAD,OAA8BG,KAAKD,UAFnE,cAEUG,EAFV,yBAGWA,GAHX,gCAKIC,MAAM,wBALV,2GAFC,IAED,+DAQA,WAAqBC,GAArB,gGAE2BP,GAAAA,CAAM,yBAAD,OACDG,KAAKD,QADJ,kBACqBK,EADrB,+CAFhC,cAEUF,EAFV,yBAKWA,GALX,gCAOIC,MAAM,wBAPV,4GARA,IAQA,gEAWA,WAAsBE,GAAtB,gGAE2BR,GAAAA,CAAM,UAAD,OAChBQ,EADgB,oBACFL,KAAKD,QADH,kBACoBC,KAAKC,YADzB,2CAFhC,cAEUC,EAFV,yBAKWA,GALX,gCAOIC,MAAM,sBAPV,4GAXA,IAWA,gEAUA,WAAsBE,GAAtB,gGAE2BR,GAAAA,CAAM,UAAD,OAChBQ,EADgB,4BACML,KAAKD,QADX,oBAFhC,cAEUG,EAFV,yBAKWA,GALX,gCAOIC,MAAM,wBAPV,4GAVA,IAUA,gEAWA,WAAsBE,GAAtB,gGAE2BR,GAAAA,CAAM,UAAD,OAChBQ,EADgB,4BACML,KAAKD,QADX,oBAFhC,cAEUG,EAFV,yBAKWA,GALX,gCAOIC,MAAM,wBAPV,4GAXA,M,EApCmBL,I,oDCoBrB,IAtBA,YAAmC,IAAdQ,EAAa,EAAbA,UACnB,OACE,8BACGA,EAAUC,KAAI,SAACC,GAEd,OACE,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMH,IAC3BM,MAAO,CAAEC,QAASJ,EAAMH,GAAIG,MAAOA,IAHvC,SAMGA,EAAMK,MAAQL,EAAMM,kBAPhBN,EAAMH,W,uHCTzB,EAAwB,yB,SCmCxB,MAhCA,YAAkC,IAAbU,EAAY,EAAZA,SACnB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMC,OAAO,GAAGN,SAZC,SAACO,GAEpB,GADAA,EAAEC,kBACGN,EAAUO,OACb,OAAOrB,MAAM,oBAGfY,EAASE,GACTC,EAAa,KAKX,WACE,kBACEO,KAAK,OACLC,YAAY,aACZC,MAAOV,EACPW,SArBc,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACjCT,EAAaS,OAsBT,mBAAQF,KAAK,SAAb,0B,UCvBFK,EAAY,I,QAAIhC,GAgCtB,MA9BA,WACE,OAA4BkB,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACA,GAAkChB,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMe,GAAYC,EAAAA,EAAAA,cAAW,iBAAC,uFACvBjB,EADuB,iEAIHa,EAAUK,eAAelB,GAJtB,OAItBmB,EAJsB,OAK5BJ,EAAUI,EAAWC,KAAKC,SALE,2CAM3B,CAACrB,IAUJ,OARAsB,EAAAA,EAAAA,YAAU,WACRN,MACC,CAACA,KAOF,4BACE,SAAC,EAAD,CAAWlB,SANM,SAACyB,GACpBtB,EAAasB,OAMX,yBACE,SAACC,EAAA,EAAD,CAAWnC,UAAWyB","sources":["Services/ApiService.js","components/MovieList/MovieList.jsx","webpack://start-react-template/./src/components/FormInput/FormInput.module.scss?90a9","components/FormInput/FormInput.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\n//api.themoviedb.org/3/movie/550?api_key=f7d6a30af5958d06330f7e1173f523fb\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\n\nexport default class MoviesApi {\n  API_KEY = \"f7d6a30af5958d06330f7e1173f523fb\";\n\n  constructor() {\n    this.searchQuery = \"\";\n  }\n\n  async getTrendingMovie() {\n    try {\n      const response = await axios(`/trending/all/day?api_key=${this.API_KEY}`);\n      return response;\n    } catch (error) {\n      alert(\"Something went wrong\");\n    }\n  }\n  async getSearchMovie(text) {\n    try {\n      const response = await axios(\n        `/search/movie?api_key=${this.API_KEY}&query=${text}&language=en-US&page=1&include_adult=false`\n      );\n      return response;\n    } catch (error) {\n      alert(\"Something went wrong\");\n    }\n  }\n\n  async getMovieDetails(id) {\n    try {\n      const response = await axios(\n        `/movie/${id}?api_key=${this.API_KEY}&query=${this.searchQuery}&language=en-US&page=1&&language=en-US`\n      );\n      return response;\n    } catch (error) {\n      alert(\"Less information !\");\n    }\n  }\n  async getMovieCredits(id) {\n    try {\n      const response = await axios(\n        `/movie/${id}/credits?api_key=${this.API_KEY}&language=en-US`\n      );\n      return response;\n    } catch (error) {\n      alert(\"Something went wrong\");\n    }\n  }\n\n  async getMovieReviews(id) {\n    try {\n      const response = await axios(\n        `/movie/${id}/reviews?api_key=${this.API_KEY}&language=en-US`\n      );\n      return response;\n    } catch (error) {\n      alert(\"Something went wrong\");\n    }\n  }\n\n  // get query() {\n  //   return this.searchQuery;\n  // }\n\n  // set query(newSearch) {\n  //   this.searchQuery = newSearch;\n  // }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nfunction MovieList({ listItems }) {\n  return (\n    <>\n      {listItems.map((movie) => {\n        // console.log(\"movie\", movie);\n        return (\n          <li key={movie.id}>\n            <Link\n              to={{\n                pathname: `/movies/${movie.id}`,\n                state: { movieId: movie.id, movie: movie },\n              }}\n            >\n              {movie.name || movie.original_title}\n            </Link>\n          </li>\n        );\n      })}\n    </>\n  );\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  listItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      original_title: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"FormInput_input__rh9Di\"};","import React, { useState } from \"react\";\nimport s from \"./FormInput.module.scss\";\nimport PropTypes from \"prop-types\";\n\nfunction FormInput({ onSubmit }) {\n  const [inputText, setInputText] = useState(\"\");\n\n  const onChangeInput = ({ target: { value } }) => {\n    setInputText(value);\n  };\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    if (!inputText.trim()) {\n      return alert(\"Enter movie name\");\n    }\n    // console.log(\"inputText\", inputText);\n    onSubmit(inputText);\n    setInputText(\"\");\n  };\n\n  return (\n    <div className={s.input}>\n      <form action=\"\" onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter name\"\n          value={inputText}\n          onChange={onChangeInput}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default FormInput;\n\nFormInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  inputText: PropTypes.string,\n};\n","import React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport FormInput from \"components/FormInput/FormInput\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport MoviesApi from \"Services/ApiService\";\nimport PropTypes from \"prop-types\";\n\nconst moviesApi = new MoviesApi();\n\nfunction MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n\n  const axiosData = useCallback(async () => {\n    if (!inputText) {\n      return;\n    }\n    const showMovies = await moviesApi.getSearchMovie(inputText);\n    setMovies(showMovies.data.results);\n  }, [inputText]);\n\n  useEffect(() => {\n    axiosData();\n  }, [axiosData]);\n\n  const onSubmitForm = (Text) => {\n    setInputText(Text);\n  };\n\n  return (\n    <div>\n      <FormInput onSubmit={onSubmitForm} />\n      <ul>\n        <MovieList listItems={movies} />\n      </ul>\n    </div>\n  );\n}\n\nexport default MoviesPage;\n\nMoviesPage.propTypes = {\n  movies: PropTypes.array,\n  inputText: PropTypes.string,\n};\n"],"names":["axios","MoviesApi","API_KEY","this","searchQuery","response","alert","text","id","listItems","map","movie","to","pathname","state","movieId","name","original_title","onSubmit","useState","inputText","setInputText","className","s","action","e","preventDefault","trim","type","placeholder","value","onChange","target","moviesApi","movies","setMovies","axiosData","useCallback","getSearchMovie","showMovies","data","results","useEffect","Text","MovieList"],"sourceRoot":""}